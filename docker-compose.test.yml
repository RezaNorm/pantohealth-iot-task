services:
  # Test MongoDB
  test-mongodb:
    image: mongo:7.0
    container_name: xray-test-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: testuser
      MONGO_INITDB_ROOT_PASSWORD: testpass
      MONGO_INITDB_DATABASE: xray-iot-test
    ports:
      - "27018:27017"
    volumes:
      - test-mongo-data:/data/db
      - ./docker/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Test RabbitMQ
  test-rabbitmq:
    image: rabbitmq:3.12-management
    container_name: xray-test-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: testuser
      RABBITMQ_DEFAULT_PASS: testpass
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - test-rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Test runner
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: xray-test-runner
    environment:
      NODE_ENV: test
      MONGODB_URI: mongodb://testuser:testpass@test-mongodb:27017/xray-iot-test?authSource=admin
      RABBITMQ_URL: amqp://testuser:testpass@test-rabbitmq:5672
    volumes:
      - ./coverage:/app/coverage
    depends_on:
      test-mongodb:
        condition: service_healthy
      test-rabbitmq:
        condition: service_healthy
    command: ["npm", "run", "test:cov"]

volumes:
  test-mongo-data:
  test-rabbitmq-data:
